#!/usr/bin/env python
# encoding: utf-8

from __future__ import print_function
import sys


def options(opt):
    opt.add_option('--with-python-bindings', action='store_true',
                   dest = 'with_python_bindings', default = False,
                   help = 'whether or not to compile the python bindings')


def configure(conf):
    conf.env['WITH_PYTHON_BINDINGS'] = conf.options.with_python_bindings
    if conf.env['WITH_PYTHON_BINDINGS']:
        conf.load('swig python')

        if type(conf.env.SWIG) == str:
            conf.env.SWIG = [conf.env.SWIG]
        if conf.check_swig_version() < (3, 0, 12):
            conf.fatal('this swig version is too old')

        conf.check_python_version((3, 7))
        conf.check_python_headers()

        conf.env['CPPPATH_BINDINGS'] = [ '../../src',
                                         '../../src/bindings',
                                         '../../src/metrics',
                                         '../../src/3rdparty'
                                         ]
        conf.env['CXXFLAGS_BINDINGS'] = [ '-Wno-parentheses', '-Wno-uninitialized' ] #TODO is that ever used?


def build(bld):
    bld.shlib(features = 'cxx cshlib pyext',
        source = 'gaia.swig',
        target = '_gaia2',
        # -w 451: ignore the warning "Setting a const char * variable may leak memory"
        swig_flags = '-c++ -python -w451',
        use = ['gaia2'] + bld.env['USELIB'], # + ['BINDINGS'],
        includes = bld.env['CPPPATH_BINDINGS'],
        install_path = '${PYTHONDIR}/gaia2'
    )

    bld.install_as('${PYTHONDIR}/gaia2/__init__.py', 'gaia2.py')
    bld.install_files('${PYTHONDIR}/gaia2', bld.path.ant_glob('pygaia/*.py'))

    subfolders = [ 'classification', 'linalg', 'mtgdb',
                   'scripts', 'scripts/classification', 'scripts/collections' ]

    for folder in subfolders:
        bld.install_files('${PYTHONDIR}/gaia2/%s' % folder, bld.path.ant_glob('pygaia/%s/*.py' % folder))
        bld.install_files('${PYTHONDIR}/gaia2/%s' % folder, bld.path.ant_glob('pygaia/%s/*.yaml' % folder))
